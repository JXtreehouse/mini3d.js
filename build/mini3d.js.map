{"version":3,"file":"mini3d.js","sources":["../src/core/gl.js","../src/math/math.js","../src/math/vector3.js","../src/math/matrix.js","../src/math/quaternion.js","../src/core/shader.js","../src/core/vertexFormat.js","../src/core/vertexBuffer.js","../src/core/indexBuffer.js","../src/core/mesh.js","../src/core/texture.js","../src/assets/imageAsset.js","../src/assets/textAsset.js","../src/assets/assetManager.js","../src/core/textureManager.js","../src/core/objFileLoader.js","../src/scene/sceneNode.js","../src/scene/SceneNode.js","../src/scene/scene.js"],"sourcesContent":["let gl = null;\r\nlet canvas = null;\r\n\r\nfunction init(canvasId){    \r\n    if(canvasId != null){\r\n        canvas = document.getElementById(canvasId);\r\n        if(canvas === undefined){\r\n            console.error(\"cannot find a canvas named:\"+canvasId);\r\n            return;\r\n        }\r\n    } else {\r\n        canvas = document.createElement(\"canvas\");       \r\n        document.body.appendChild(canvas);       \r\n    }\r\n   \r\n    canvas.width = Math.floor(canvas.clientWidth * window.devicePixelRatio);\r\n    canvas.height = Math.floor(canvas.clientHeight * window.devicePixelRatio);    \r\n\r\n    let names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n    let context = null;\r\n    for(let i=0; i<names.length; ++i){\r\n        try{\r\n            context = canvas.getContext(names[i]);\r\n        } catch(e){}\r\n        if(context){\r\n            break;\r\n        }\r\n    }\r\n    gl = context;\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); //Flip the image's y axis    \r\n};\r\n\r\nexport { init, gl, canvas };\r\n\r\n","\r\nclass MathUtils{\r\n    constructor(){\r\n        this.Pi = 3.141592654;\r\n        this.TwoPi = 6.283185307;\r\n        this.HalfPi = 1.570796327;\r\n\r\n        this.Epsilon = 0.000001;\r\n        this.ZeroEpsilon = 32.0 * 1.175494351e-38; // Very small epsilon for checking against 0.0f\r\n    }\r\n\r\n    degToRad(degree){\r\n        return degree * 0.017453293;\r\n    }\r\n\r\n    radToDeg(rad){\r\n        return rad * 57.29577951;\r\n    }\r\n\r\n    clamp(f, min, max){\r\n        if(f<min) f = min;\r\n        else if(f>max) f = max;\r\n        return f;\r\n    }\r\n}\r\n\r\nlet math = new MathUtils();\r\n\r\nexport { math };","import { math } from \"./math\";\r\n\r\nclass Vector3{\r\n    constructor(x=0,y=0,z=0){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    clone(){\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n\r\n    set(x,y,z){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    length(){\r\n        return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);\r\n    }\r\n\r\n    lengthSquare(){\r\n        return this.x*this.x+this.y*this.y+this.z*this.z;\r\n    }\r\n\r\n    equals(rhs){\r\n        let eps = math.Epsilon;\r\n        return (this.x > rhs.x - eps && this.x < rhs.x + eps &&\r\n                this.y > rhs.y - eps && this.y < rhs.y + eps &&\r\n                this.z > rhs.z - eps && this.z < rhs.z + eps);\r\n    }\r\n\r\n    copyFrom(rhs){\r\n        this.x = rhs.x;\r\n        this.y = rhs.y;\r\n        this.z = rhs.z;\r\n        return this;\r\n    }\r\n\r\n    negative(){\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n        return this;\r\n    }\r\n\r\n    add(rhs){\r\n        this.x += rhs.x;\r\n        this.y += rhs.y;\r\n        this.z += rhs.z;\r\n        return this;\r\n    }\r\n\r\n    sub(rhs){\r\n        this.x -= rhs.x;\r\n        this.y -= rhs.y;\r\n        this.z -= rhs.z;\r\n        return this;\r\n    }\r\n\r\n    multiply(rhs){\r\n        this.x *= rhs.x;\r\n        this.y *= rhs.y;\r\n        this.z *= rhs.z;\r\n        return this;\r\n    }\r\n\r\n    scale(s){\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n\r\n    normalize(){\r\n        let lensq =this.x*this.x+this.y*this.y+this.z*this.z;\r\n        if(lensq > 0){\r\n           let g = 1/Math.sqrt(lensq);\r\n           this.x *= g;\r\n           this.y *= g;\r\n           this.z *= g;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    static copyTo(src, dst){\r\n        dst.x = src.x;\r\n        dst.y = src.y;\r\n        dst.z = src.z;\r\n        return dst;\r\n    }\r\n\r\n    static negativeTo(src, dst){\r\n        dst.x = -src.x;\r\n        dst.y = -src.y;\r\n        dst.z = -src.z;\r\n        return dst;\r\n    }\r\n\r\n    static add(a, b, dst){\r\n        dst.x = a.x + b.x;\r\n        dst.y = a.y + b.y;\r\n        dst.z = a.z + b.z;\r\n        return dst;\r\n    }\r\n\r\n    static sub(a, b, dst){\r\n        dst.x = a.x - b.x;\r\n        dst.y = a.y - b.y;\r\n        dst.z = a.z - b.z;\r\n        return dst;\r\n    }\r\n\r\n    static multiply(a, b, dst){\r\n        dst.x = a.x * b.x;\r\n        dst.y = a.y * b.y;\r\n        dst.z = a.z * b.z;\r\n        return dst;\r\n    }\r\n\r\n    static scaleTo(a, s, dst){\r\n        dst.x = a.x * s;\r\n        dst.y = a.y * s;\r\n        dst.z = a.z * s;\r\n        return dst;\r\n    }\r\n\r\n    static dot(a, b){\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n\r\n    static cross(a, b, dst){\r\n        dst.x = a.y * b.z - a.z * b.y;\r\n        dst.y = a.z * b.x - a.x * b.z;\r\n        dst.z = a.x * b.y - a.y * b.x;\r\n        return dst;\r\n    }\r\n\r\n    static lerp(a, b, f, dst){\r\n        dst.x = a.x + (b.x-a.x)*f;\r\n        dst.y = a.y + (b.y-a.y)*f;\r\n        dst.z = a.z + (b.z-a.z)*f;\r\n        return dst;\r\n    }\r\n\r\n    static distance(a,b){\r\n        let dx = a.x - b.x;\r\n        let dy = a.y - b.y;\r\n        let dz = a.z - b.z;\r\n        return Math.sqrt(dx*dx+dy*dy+dz*dz);\r\n    }\r\n\r\n    static distanceSquare(a,b){\r\n        let dx = a.x - b.x;\r\n        let dy = a.y - b.y;\r\n        let dz = a.z - b.z;\r\n        return dx*dx+dy*dy+dz*dz;\r\n    }\r\n}\r\n\r\nVector3.Right = new Vector3(1, 0, 0);\r\nVector3.Up = new Vector3(0, 1, 0);\r\n\r\nexport { Vector3 };","class Matrix4 {\r\n    constructor(){\r\n        this.elements = new Float32Array([1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1]);\r\n    }\r\n\r\n    /**\r\n     * Set the identity matrix.\r\n     */\r\n    setIdentity(){\r\n        let e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0;  e[12] = 0;\r\n        e[1] = 0; e[5] = 1; e[9] = 0;  e[13] = 0;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = 0;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy matrix.\r\n     */\r\n    set(other){\r\n        let src = other.elements;\r\n        let dst = this.elements;\r\n        if(src === dst){\r\n            return this;\r\n        }\r\n\r\n        for(let i=0; i<16; i++){\r\n            dst[i] = src[i];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param {Matrix4} other The multiply matrix\r\n     * @returns this \r\n     */\r\n    multiply(other){\r\n        let i, e, a, b, ai0, ai1, ai2, ai3;\r\n  \r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = other.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        \r\n        for (i = 0; i < 4; i++) {\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n            e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n            e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n            e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the matrix for translation.\r\n     */\r\n    setTranslate(x,y,z){\r\n        let e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0;  e[12] = x;\r\n        e[1] = 0; e[5] = 1; e[9] = 0;  e[13] = y;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = z;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix for translation from the right. \r\n     */\r\n    translate(x, y, z) {\r\n        let e = this.elements;\r\n        e[12] += e[0] * x + e[4] * y + e[8]  * z;\r\n        e[13] += e[1] * x + e[5] * y + e[9]  * z;\r\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set the matrix for scaling.\r\n     */\r\n    setScale(sx, sy, sz){\r\n        let e = this.elements;\r\n        e[0] = sx; e[4] = 0;  e[8] = 0;   e[12] = 0;\r\n        e[1] = 0;  e[5] = sy; e[9] = 0;   e[13] = 0;\r\n        e[2] = 0;  e[6] = 0;  e[10] = sz; e[14] = 0;\r\n        e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        return this;\r\n    }  \r\n    \r\n    /**\r\n     * Multiply the matrix for scaling from the right.\r\n     */\r\n    scale(sx, sy, sz){\r\n        let e = this.elements;\r\n        e[0] *= sx; e[4] *= sy;  e[8] *= sz;\r\n        e[1] *= sx; e[5] *= sy;  e[9] *= sz;\r\n        e[2] *= sx; e[6] *= sy;  e[10] *= sz;\r\n        e[3] *= sx; e[7] *= sy;  e[11] *= sz;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the matrix for rotation.\r\n     * The vector of rotation axis may not be normalized.\r\n     * @param angle The angle of rotation (degrees)\r\n     * @param x The X coordinate of vector of rotation axis. \r\n     * @param y The Y coordinate of vector of rotation axis.\r\n     * @param z The Z coordinate of vector of rotation axis.\r\n     */\r\n    setRotate(angle, x, y, z){\r\n        let e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n        angle = Math.PI * angle / 180;\r\n        e = this.elements;\r\n\r\n        s = Math.sin(angle);\r\n        c = Math.cos(angle);\r\n\r\n        if (0 !== x && 0 === y && 0 === z) {\r\n            // Rotation around X axis\r\n            if (x < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = 1;  e[4] = 0;  e[ 8] = 0;  e[12] = 0;\r\n            e[1] = 0;  e[5] = c;  e[ 9] =-s;  e[13] = 0;\r\n            e[2] = 0;  e[6] = s;  e[10] = c;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else if (0 === x && 0 !== y && 0 === z) {\r\n            // Rotation around Y axis\r\n            if (y < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = c;  e[4] = 0;  e[ 8] = s;  e[12] = 0;\r\n            e[1] = 0;  e[5] = 1;  e[ 9] = 0;  e[13] = 0;\r\n            e[2] =-s;  e[6] = 0;  e[10] = c;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else if (0 === x && 0 === y && 0 !== z) {\r\n            // Rotation around Z axis\r\n            if (z < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = c;  e[4] =-s;  e[ 8] = 0;  e[12] = 0;\r\n            e[1] = s;  e[5] = c;  e[ 9] = 0;  e[13] = 0;\r\n            e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else {\r\n            // Rotation around another axis\r\n            len = Math.sqrt(x*x + y*y + z*z);\r\n            if (len !== 1) {\r\n            rlen = 1 / len;\r\n            x *= rlen;\r\n            y *= rlen;\r\n            z *= rlen;\r\n            }\r\n            nc = 1 - c;\r\n            xy = x * y;\r\n            yz = y * z;\r\n            zx = z * x;\r\n            xs = x * s;\r\n            ys = y * s;\r\n            zs = z * s;\r\n\r\n            e[ 0] = x*x*nc +  c;\r\n            e[ 1] = xy *nc + zs;\r\n            e[ 2] = zx *nc - ys;\r\n            e[ 3] = 0;\r\n\r\n            e[ 4] = xy *nc - zs;\r\n            e[ 5] = y*y*nc +  c;\r\n            e[ 6] = yz *nc + xs;\r\n            e[ 7] = 0;\r\n\r\n            e[ 8] = zx *nc + ys;\r\n            e[ 9] = yz *nc - xs;\r\n            e[10] = z*z*nc +  c;\r\n            e[11] = 0;\r\n\r\n            e[12] = 0;\r\n            e[13] = 0;\r\n            e[14] = 0;\r\n            e[15] = 1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix for rotation from the right.\r\n     * The vector of rotation axis may not be normalized.\r\n     */\r\n    rotate(angle, x, y, z){\r\n        return this.multiply(new Matrix4().setRotate(angle, x, y, z));\r\n    }\r\n\r\n    /**\r\n     * Set the viewing matrix.\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param centerX, centerY, centerZ The position of the reference point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    setLookAt(eyeX, eyeY, eyeZ, targetX, targetY, targetZ, upX, upY, upZ){\r\n        // N = eye - target\r\n        let nx, ny, nz;\r\n        nx = eyeX - targetX;\r\n        ny = eyeY - targetY;\r\n        nz = eyeZ - targetZ;\r\n        let rl = 1/Math.sqrt(nx*nx+ny*ny+nz*nz);\r\n        nx *= rl;\r\n        ny *= rl;\r\n        nz *= rl;\r\n        // U = UP cross N\r\n        let ux, uy, uz;\r\n        ux = upY * nz - upZ * ny;\r\n        uy = upZ * nx - upX * nz;\r\n        uz = upX * ny - upY * nx;\r\n        rl = 1/Math.sqrt(ux*ux+uy*uy+uz*uz);\r\n        ux *= rl;\r\n        uy *= rl;\r\n        uz *= rl;\r\n        // V = N cross U\r\n        let vx, vy, vz;\r\n        vx = ny * uz - nz * uy;\r\n        vy = nz * ux - nx * uz;\r\n        vz = nx * uy - ny * ux;\r\n        rl = 1/Math.sqrt(vx*vx+vy*vy+vz*vz);\r\n        vx *= rl;\r\n        vy *= rl;\r\n        vz *= rl;\r\n    \r\n        let e = this.elements;\r\n        e[0] = ux;\r\n        e[1] = vx;\r\n        e[2] = nx;\r\n        e[3] = 0;\r\n    \r\n        e[4] = uy;\r\n        e[5] = vy;\r\n        e[6] = ny;\r\n        e[7] = 0;\r\n    \r\n        e[8] = uz;\r\n        e[9] = vz;\r\n        e[10] = nz;\r\n        e[11] = 0;\r\n    \r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    \r\n        return this.translate(-eyeX, -eyeY, -eyeZ);\r\n    }\r\n\r\n    setOrtho(left, right, bottom, top, near, far){ \r\n        if (left === right || bottom === top || near === far) {\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n\r\n        let rw = 1 / (right - left);\r\n        let rh = 1 / (top - bottom);\r\n        let rd = 1 / (far - near);\r\n\r\n        let e = this.elements;\r\n\r\n        e[0]  = 2 * rw;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = 2 * rh;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = 0;\r\n        e[9]  = 0;\r\n        e[10] = -2 * rd;\r\n        e[11] = 0;\r\n\r\n        e[12] = -(right + left) * rw;\r\n        e[13] = -(top + bottom) * rh;\r\n        e[14] = -(far + near) * rd;\r\n        e[15] = 1;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFrustum(left, right, bottom, top, near, far){\r\n        if (left === right || bottom === top || near === far) {\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n        if(near <= 0){\r\n            console.error(\"wrong near\");\r\n            return;\r\n        }\r\n        if(far <= 0){\r\n            console.error(\"wrong far\");\r\n            return;\r\n        }\r\n\r\n        let rw = 1 / (right - left);\r\n        let rh = 1 / (top - bottom);\r\n        let rd = 1 / (far - near);\r\n\r\n        let e = this.elements;\r\n\r\n        e[0]  = 2 * near * rw;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = 2 * near * rh;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = (right + left) * rw;\r\n        e[9]  = (top + bottom) * rh;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0\r\n        e[13] = 0\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    setPerspective(fovy, aspect, near, far){\r\n        if(near === far || aspect === 0 || near <= 0 || far <= 0){\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n\r\n        let radius = fovy * Math.PI / 180 / 2;\r\n        let sin = Math.sin(radius);\r\n        if(sin === 0){\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n        let cot = Math.cos(radius) / sin;\r\n        let rd = 1 / (far - near);\r\n       \r\n        let e =  this.elements;\r\n        e[0] = cot / aspect;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n\r\n        e[4] = 0;\r\n        e[5] = cot;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inverse matrix of source matrix, and set to this.\r\n     * @param {Matrix4} source The source matrix.\r\n     * @returns this\r\n     */\r\n    setInverseOf(source){        \r\n        let s = source.elements;\r\n        let d = this.elements;\r\n        let inv = new Float32Array(16);\r\n\r\n        //使用标准伴随阵法计算逆矩阵：\r\n        //标准伴随阵 = 方阵的代数余子式组成的矩阵的转置矩阵\r\n        //逆矩阵 = 标准伴随阵/方阵的行列式\r\n\r\n        //计算代数余子式并转置后放入inv矩阵中\r\n        inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n                  + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n        inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n                  - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n        inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n                  + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n        inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n                  - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n        inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n                  - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n        inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n                  + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n        inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n                  - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n        inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n                  + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n        inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n                  + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n        inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n                  - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n        inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n                  + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n        inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n                  - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n        inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n                  - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n        inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n                  + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n        inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n                  - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n        inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n                  + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n        //计算行列式，选择方阵的第一列，对该列中的四个元素S[0],s[1],s[2],s[3]分别乘以对应的代数余子式，然后相加\r\n        let det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n        //注：选择任意一行，例如第一行，也是可以的\r\n        //let det = s[0]*inv[0] + s[4]*inv[1] + s[8]*inv[2] + s[12]*inv[3];\r\n        \r\n        if(det===0){\r\n            return this;\r\n        }\r\n\r\n        det = 1 / det;\r\n        for(let i=0; i<16; ++i){\r\n            d[i] = inv[i] * det;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Invert this matrix\r\n     * @returns this\r\n     */\r\n    invert(){\r\n        return this.setInverseOf(this);\r\n    }\r\n\r\n    /**\r\n     * Transpose this matrix.\r\n     * @returns this\r\n     */\r\n    transpose(){\r\n        let e = this.elements;\r\n\r\n        //转置4x4矩阵，分别交换 1,4; 2,8; 3,12; 6,9; 7,13; 11,14\r\n        let t;\r\n        t = e[1]; e[1] = e[4]; e[4] = t;\r\n        t = e[2]; e[2] = e[8]; e[8] = t;\r\n        t = e[3]; e[3] = e[12]; e[12] = t;\r\n        t = e[6]; e[6] = e[9]; e[9] = t;        \r\n        t = e[7]; e[7] = e[13]; e[13] = t;\r\n        t = e[11]; e[11] = e[14]; e[14] = t;\r\n\r\n        return this;\r\n    }\r\n\r\n    static multiply(m1,m2,dst){\r\n        let i, e, a, b, ai0, ai1, ai2, ai3;\r\n  \r\n        // Calculate e = a * b\r\n        e = dst.elements;\r\n        a = m1.elements;\r\n        b = m2.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        \r\n        for (i = 0; i < 4; i++) {\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n            e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n            e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n            e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n        \r\n        return dst;\r\n    }\r\n}\r\n\r\nexport { Matrix4 };","import { math } from \"./math\";\r\nimport { Matrix4 } from \"./matrix\";\r\n\r\nclass Quaternion {\r\n    constructor(x=0,y=0,z=0,w=1){        \r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * Return a clone of this quaternion.\r\n     */\r\n    clone(){\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    /**\r\n     * Set the x,y,z,w of this quaternion.\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {Number} z \r\n     * @param {Number} w \r\n     */\r\n    set(x,y,z,w){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy the x,y,z,w from rhs to this quaternion.\r\n     * @param {Quaternion} rhs \r\n     */\r\n    copyFrom(rhs){\r\n        this.x = rhs.x;\r\n        this.y = rhs.y;\r\n        this.z = rhs.z;\r\n        this.w = rhs.w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Make this quaternion identity.\r\n     */\r\n    identity(){\r\n        this.x = 0.0;\r\n        this.y = 0.0;\r\n        this.z = 0.0;\r\n        this.w = 1.0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if the quaternion rhs is equal to this quaternion.\r\n     * @param {Quaternion} rhs \r\n     */\r\n    equals(rhs){\r\n        let eps = math.Epsilon;\r\n        return (this.x > rhs.x - eps && this.x < rhs.x + eps &&\r\n                this.y > rhs.y - eps && this.y < rhs.y + eps &&\r\n                this.z > rhs.z - eps && this.z < rhs.z + eps &&\r\n                this.w > rhs.w - eps && this.w < rhs.w + eps);\r\n    }\r\n\r\n    /**\r\n     * Sets the euler angle representation of the rotation.\r\n     * @param {Vector3} eulerAngles \r\n     */\r\n    setFromEulerAngles(eulerAngles){\r\n        let ex = math.degToRad(eulerAngles.x*0.5);\r\n        let ey = math.degToRad(eulerAngles.y*0.5);\r\n        let ez = math.degToRad(eulerAngles.z*0.5);\r\n\r\n        let cx = Math.cos(ex);\r\n        let sx = Math.sin(ex);\r\n        let cy = Math.cos(ey);\r\n        let sy = Math.sin(ey);\r\n        let cz = Math.cos(ez);\r\n        let sz = Math.sin(ez);\r\n\r\n        let qx = new Quaternion(sx, 0.0, 0.0, cx);\r\n        let qy = new Quaternion(0.0, sy, 0.0, cy);\r\n        let qz = new Quaternion(0.0, 0.0, sz, cz);\r\n\r\n        // q = (qy * qx) * qz        \r\n        Quaternion.multiply(qy, qx, this);\r\n        Quaternion.multiply(this, qz, this);\r\n        return this;   \r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates from fromDir to toDir.\r\n     * @param {Vector3} fromDir \r\n     * @param {Vector3} toDir \r\n     */\r\n    setFromToRotation(fromDir, toDir){\r\n\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which looks in forward and the up direction is upwards.\r\n     * @param {Vector3} forward The direction to look in.\r\n     * @param {Vector3} upwards The up direction.\r\n     */\r\n    setLookRotation(forward, upwards){\r\n\r\n    }\r\n\r\n    /**\r\n     * Normalize this quaternion.\r\n     */\r\n    normalize(){\r\n        let mag = Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n        if(mag>0.0){\r\n            let g = 1.0/mag;\r\n            this.x *= g;\r\n            this.y *= g;\r\n            this.z *= g;\r\n            this.w *= g;\r\n        } else {\r\n            this.identity();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Converts a rotation to angle-axis representation. (angeles in degrees)\r\n     * @returns { angle:Number, axis:[x,y,z]}\r\n     */\r\n    toAngleAxis(){\r\n\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates angle degrees around axis.\r\n     * @param {Vector3} axis The rotation axis.\r\n     * @param {Number} angle Rotation angle in degrees.\r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static axisAngle(axis, angle){\r\n        let halfAngle = math.degToRad(angle*0.5);\r\n        let s = Math.sin(halfAngle);\r\n        return new Quaternion(s*axis.x, s*axis.y, s*axis.z, Math.cos(halfAngle));\r\n    }\r\n\r\n    /**\r\n     * Returns a rotation that rotates z degrees around the z axis,\r\n     * x degrees around the x axis, and y degrees around the y axis; applied in that order.\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {Number} z \r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static euler(x, y, z){\r\n        let ex = math.degToRad(x*0.5);\r\n        let ey = math.degToRad(y*0.5);\r\n        let ez = math.degToRad(z*0.5);\r\n\r\n        let cx = Math.cos(ex);\r\n        let sx = Math.sin(ex);\r\n        let cy = Math.cos(ey);\r\n        let sy = Math.sin(ey);\r\n        let cz = Math.cos(ez);\r\n        let sz = Math.sin(ez);\r\n\r\n        let qx = new Quaternion(sx, 0.0, 0.0, cx);\r\n        let qy = new Quaternion(0.0, sy, 0.0, cy);\r\n        let qz = new Quaternion(0.0, 0.0, sz, cz);\r\n\r\n        // q = (qy * qx) * qz    \r\n        let q = new Quaternion();    \r\n        Quaternion.multiply(qy, qx, q);\r\n        Quaternion.multiply(q, qz, q);\r\n        return q;        \r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates from fromDir to toDir.\r\n     * @param {Vector3} fromDir \r\n     * @param {Vector3} toDir \r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static fromToRotation(fromDir, toDir){\r\n\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which looks in forward and the up direction is upwards.\r\n     * @param {Vector3} forward The direction to look in.\r\n     * @param {Vector3} upwards The up direction.\r\n     * @returns {Quaternion} The rotation quaternion. \r\n     *  Returns identity if forward or upwards magnitude is zero or forward and upwards are colinear.\r\n     */\r\n    static lookRotation(forward, upwards){\r\n\r\n    }\r\n\r\n    /**\r\n     * Rotates a rotation from towards to.\r\n     * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\r\n     * Negative values of maxDegreesDelta will move away from to until the rotation is exactlly the opposite direction.\r\n     * @param {Quaternion} from \r\n     * @param {Quaternion} to \r\n     * @param {Number} maxDegreesDelta \r\n     * @returns The rotatoin quaternion.\r\n     */\r\n    static rotateTowards(from, to, maxDegreesDelta){\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns the conjugate of q.\r\n     * @param {Quaternion} q \r\n     */\r\n    static conjugate(q){\r\n        return new Quaternion(-q.x, -q.y, -q.z, q.w);\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of q.\r\n     * @param {Quaternion} q \r\n     */\r\n    static inverse(q){\r\n        return Quaternion.conjugate(q);\r\n    }\r\n\r\n    /**\r\n     * Returns the angle in degrees between two quaternion qa & qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} ab\r\n     * @returns {Number} The angle in degrees.\r\n     */    \r\n    static angleBetween(qa, ab){\r\n\r\n    }\r\n\r\n    /**\r\n     * The dot product between two quaternions.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @returns {Number} The dot product.\r\n     */\r\n    static dot(qa, qb){\r\n        return qa.x * qb.x + qa.y * qb.y + qa.z * qb.z + qa.w * qb.w;\r\n    }\r\n\r\n    /**\r\n     * Multiply the quaternion qa and qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Quaternion} dst The result set to dst.\r\n     */\r\n    static multiply(qa, qb, dst){\r\n        dst.set(\r\n            qa.w*qb.x + qa.x*qb.w + qa.y*qb.z - qa.z*qb.y,\r\n            qa.w*qb.y + qa.y*qb.w + qa.z*qb.x - qa.x*qb.z,\r\n            qa.w*qb.z + qa.z*qb.w + qa.x*qb.y - qa.y*qb.x,\r\n            qa.w*qb.w - qa.x*qb.x - qa.y*qb.y - qa.z*qb.z            \r\n        );            \r\n    }\r\n\r\n    /**\r\n     * Rotate the vector by quaternion.\r\n     * @param {Quaternion} q\r\n     * @param {Vector3} v \r\n     * @param {Vector3} dst\r\n     */\r\n    static rotateVector(q, v, dst){\r\n        // dst = q * v * inv_q\r\n\r\n        // t = q * v\r\n        let tx = q.w * v.x + q.y * v.z - q.z * v.y;\r\n        let ty = q.w * v.y + q.z * v.x - q.x * v.z;\r\n        let tz = q.w * v.z + q.x * v.y - q.y * v.x;\r\n        let tw = -q.x * v.x - q.y * v.y - q.z * v.z; \r\n        \r\n        //  dst = t * inv_q\r\n        dst.x = tw * -q.x + tx * q.w + ty * -q.z - tz * -q.y;\r\n        dst.y = tw * -q.y + ty * q.w + tz * -q.x - tx * -q.z;\r\n        dst.z = tw * -q.z + tz * q.w + tx * -q.y - ty * -q.x;\r\n        return dst;\r\n    }\r\n\r\n    /**\r\n     * Convert quaternion to rotatoin matrix.\r\n     * @param {Matrix4} matrix The rotation matrix.\r\n     */\r\n    static toMatrix4(q, matrix){\r\n        let x = q.x * 2.0;\r\n        let y = q.y * 2.0;\r\n        let z = q.z * 2.0;\r\n        let xx = q.x * x;\r\n        let yy = q.y * y;\r\n        let zz = q.z * z;\r\n        let xy = q.x * y;\r\n        let xz = q.x * z;\r\n        let yz = q.y * z;\r\n        let wx = q.w * x;\r\n        let wy = q.w * y;\r\n        let wz = q.w * z;\r\n        \r\n        let e = matrix.elements;\r\n        e[0] = 1.0 - (yy + zz);\r\n        e[1] = xy + wz;\r\n        e[2] = xz - wy;\r\n        e[3] = 0.0;\r\n\r\n        e[4] = xy - wz;\r\n        e[5] = 1.0 - (xx + zz);\r\n        e[6] = yz + wx;\r\n        e[7] = 0.0;\r\n\r\n        e[8] = xz + wy;\r\n        e[9] = yz - wx;\r\n        e[10] = 1.0 - (xx + yy);\r\n        e[11] = 0.0;\r\n\r\n        e[12] = 0.0;\r\n        e[13] = 0.0;\r\n        e[14] = 0.0;\r\n        e[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * Interpolates between qa and qb by t and normalizes the result afterwards.\r\n     * This is faster then slerp but looks worse if the rotations are far apart.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Number} t The interpolation factor.\r\n     * @returns The result quaternion.\r\n     */\r\n    static lerp(qa, qb, t){\r\n        let result = new Quaternion();\r\n        // If dot < 0, qa and qb are more than 360 degrees apart.\r\n        // The quaternions are 720 degrees of freedom, so negative all components when lerping.\r\n        if(Quaternion.dot(qa, qb) < 0){\r\n            result.set(qa.x + t*(-qb.x-qa.x),\r\n                       qa.y + t*(-qb.y-qa.y),\r\n                       qa.z + t*(-qb.z-qa.z),\r\n                       qa.w + t*(-qb.w-qa.w));\r\n        } else {\r\n            result.set(qa.x + t*(qb.x-qa.x),\r\n                       qa.y + t*(qb.y-qa.y),\r\n                       qa.z + t*(qb.z-qa.z),\r\n                       qa.w + t*(qb.w-qa.w));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Spherically interpolates between qa and qb by t.\r\n     * Use this to create a rotation which smoothly interpolates between qa to qb.\r\n     * If the value of t is close to 0, the output will be close to qa, if it is close to 1, the output will be close to qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Number} t The interpolation factor.\r\n     * @returns The result quaternion.\r\n     */\r\n    static slerp(qa, qb, t){\r\n        let dot = Quaternion.dot(qa, qb);\r\n        let result = new Quaternion();\r\n\r\n        if(dot < 0.0){\r\n            dot = -dot;\r\n            result.set(-qb.x, -qb.y, -qb.z, -qb.w);\r\n        } else {\r\n            result.set(qb);\r\n        }\r\n\r\n        let scale0 = 0;\r\n        let scale1 = 0;\r\n\r\n        if(dot < 0.95){\r\n            let angle = Math.acos(dot);\r\n            let sin_div = 1.0/Math.sin(angle);\r\n            scale1 = Math.sin(angle*t)*sin_div;\r\n            scale0 = Math.sin(angle*(1.0-t))*sin_div;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n\r\n        result.set( qa.x*scale0 + result.x*scale1,\r\n                    qa.y*scale0 + result.y*scale1,\r\n                    qa.z*scale0 + result.z*scale1,\r\n                    qa.w*scale0 + result.w*scale1);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * The identity rotation.\r\n */\r\nQuaternion.Identity = new Quaternion();\r\n\r\nexport { Quaternion };","import { gl } from \"./gl\";\r\n\r\nclass UniformInfo{\r\n    constructor(name, location, type, size, isArray){\r\n        this.name = name;\r\n        this.location = location; //WebGLUniformLocation\r\n        this.type = type;\r\n        this.size = size;   \r\n        this.isArray = isArray;     \r\n    }\r\n}\r\n\r\nclass Shader{\r\n    \r\n    constructor(){          \r\n        this.program = null;   \r\n        this._semanticToAttribName = {}; // {[semantic:string]:string}\r\n        this._attributes = {}; // {[name:string]:number}\r\n        this._uniforms = {};  // {[name:string]:WebGLUniformLocation}\r\n    }\r\n\r\n    mapAttributeSemantic(semantic, attribName){\r\n        this._semanticToAttribName[semantic] = attribName;\r\n    }\r\n\r\n    create(vshader, fshader){\r\n        let vertexShader = this.loadShader(gl.VERTEX_SHADER, vshader);\r\n        let fragmentShader = this.loadShader(gl.FRAGMENT_SHADER, fshader);\r\n        if (!vertexShader || !fragmentShader) {\r\n            return false;\r\n        }\r\n\r\n        // Create a program object\r\n        this.program = gl.createProgram();\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n\r\n        // Attach the shader objects\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n\r\n        // Link the program object\r\n        gl.linkProgram(this.program);\r\n\r\n        // Check the result of linking\r\n        let linked = gl.getProgramParameter(this.program, gl.LINK_STATUS);\r\n        if (!linked) {\r\n            let error = gl.getProgramInfoLog(this.program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(this.program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            this.program = null;    \r\n            return false;        \r\n        }\r\n\r\n        this.findoutAttributes();\r\n        this.findoutUniforms();\r\n\r\n        return true;\r\n    }\r\n\r\n    loadShader(type, source){\r\n        let shader = gl.createShader(type);\r\n        if (shader == null) {\r\n            console.log('unable to create shader');\r\n            return null;\r\n        }\r\n\r\n        // Set the shader program\r\n        gl.shaderSource(shader, source);\r\n\r\n         // Compile the shader\r\n        gl.compileShader(shader);\r\n\r\n        // Check the result of compilation\r\n        let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (!compiled) {\r\n            let error = gl.getShaderInfoLog(shader);\r\n            console.log('Failed to compile shader: ' + error);\r\n            gl.deleteShader(shader);\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    findoutAttributes(){\r\n        let attributeCount = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\r\n        for(let i=0; i<attributeCount; ++i){\r\n            let info = gl.getActiveAttrib(this.program, i);\r\n            if(!info){\r\n                break;\r\n            }\r\n\r\n            this._attributes[info.name] = gl.getAttribLocation(this.program, info.name);\r\n        }\r\n\r\n        console.log('attributes',this._attributes);\r\n    }\r\n\r\n    findoutUniforms(){\r\n        let uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n        for(let i=0; i<uniformCount; ++i){\r\n            let info = gl.getActiveUniform(this.program, i);\r\n            if(!info){\r\n                break;\r\n            }\r\n\r\n            let location = gl.getUniformLocation(this.program, info.name);\r\n            let isArray = info.size > 1 && info.name.substr(-3) === '[0]';\r\n            let uniformInfo = new UniformInfo(info.name, location, info.type, info.size, isArray);\r\n            this._uniforms[info.name] = uniformInfo;\r\n        }\r\n\r\n        console.log('uniforms',this._uniforms);\r\n    }\r\n\r\n    setUniform(name, value){\r\n        let info = this._uniforms[name];\r\n        if(!info){\r\n            console.error('can not find uniform named '+name);\r\n            return;\r\n        }\r\n        switch(info.type){\r\n            case gl.INT:{\r\n                if(info.isArray){\r\n                    gl.uniform1iv(info.location, value);\r\n                } else {\r\n                    gl.uniform1i(info.location, value);\r\n                }\r\n                break;\r\n            }\r\n            case gl.FLOAT:{\r\n                if(info.isArray){\r\n                    gl.uniform1fv(info.location, value);\r\n                } else {\r\n                    gl.uniform1f(info.location, value);\r\n                }\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC2:{\r\n                gl.uniform2fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC3:{\r\n                gl.uniform3fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC4:{\r\n                gl.uniform4fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_MAT3:{\r\n                gl.uniformMatrix3fv(info.location, false, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_MAT4:{\r\n                gl.uniformMatrix4fv(info.location, false, value);\r\n                break;\r\n            }\r\n            case gl.SAMPLER_2D:{\r\n                gl.uniform1i(info.location, value);\r\n                break;\r\n            }\r\n            default:{\r\n                console.error('uniform type not support', info.type)\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getAttributeLocation(semantic){\r\n        let name = this._semanticToAttribName[semantic];\r\n        if(name){\r\n            let location = this._attributes[name];\r\n            return location;\r\n        } else {\r\n            //console.warn('Shader: can not find attribute for semantic '+semantic);\r\n            return -1;\r\n        }\r\n    }    \r\n\r\n    use(){\r\n        if(this.program){\r\n            gl.useProgram(this.program);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { Shader };\r\n","\r\nlet VertexSemantic = {    \r\n    POSITION : 'position',        \r\n    NORMAL : 'normal',\r\n    TANGENT : 'tangent',\r\n    COLOR : 'color',\r\n    UV0 : 'uv0',\r\n    UV1 : 'uv1',  \r\n    UV2 : 'uv2', \r\n    UV3 : 'uv3'\r\n}\r\n\r\n//mini3d顶点使用float32类型\r\n\r\nclass VertexFormat{\r\n    constructor(){\r\n        this.attribs = [];\r\n        this.attribSizeMap = {};\r\n        this._vertexSize = 0;\r\n    }\r\n\r\n    addAttrib(attribSemantic, size){       \r\n        this.attribs.push(attribSemantic); \r\n        this.attribSizeMap[attribSemantic] = size;        \r\n    }\r\n\r\n    getVertexSize(){\r\n        if(this._vertexSize === 0){          \r\n            for(let i=0; i<this.attribs.length; ++i){\r\n                let semantic = this.attribs[i];\r\n                this._vertexSize += this.attribSizeMap[semantic];\r\n            }\r\n        }        \r\n        return this._vertexSize;\r\n    }\r\n}\r\n\r\nexport { VertexFormat, VertexSemantic};","import { gl } from \"./gl\";\r\nimport { VertexSemantic } from \"./vertexFormat\";\r\n\r\nclass VertexAttribInfo{\r\n    constructor(attribSemantic, attribSize){\r\n        this.semantic = attribSemantic;\r\n        this.size = attribSize;\r\n        this.offset = 0;\r\n        this.data = null;\r\n    }\r\n}\r\n\r\nclass VertexBuffer{\r\n    constructor(vertexFormat){\r\n        this._vertexCount = 0;\r\n        this._vertexStride = 0; // vertex data size in byte\r\n        this._vertexFormat = vertexFormat;\r\n        this._attribsInfo = {};\r\n        this._bufferData = null;\r\n\r\n        this.BYTES_PER_ELEMENT = 4; // for Float32Array\r\n\r\n        let attribNum = this._vertexFormat.attribs.length;\r\n        for(let i=0; i<attribNum; ++i){\r\n            let semantic = this._vertexFormat.attribs[i];\r\n            let size = this._vertexFormat.attribSizeMap[semantic];\r\n            if(size==null){\r\n                console.error('VertexBuffer: bad semantic');\r\n            } else {\r\n                let info = new VertexAttribInfo(semantic, size);\r\n                this._attribsInfo[semantic] = info;\r\n            }            \r\n        }\r\n\r\n        this._vbo = gl.createBuffer();\r\n    }\r\n\r\n    setData(semantic, data){\r\n        this._attribsInfo[semantic].data = data;\r\n    }\r\n\r\n    get vbo(){\r\n        return this._vbo;\r\n    }\r\n\r\n    get vertexCount(){\r\n        return this._vertexCount;\r\n    }\r\n\r\n    get vertexStride(){\r\n        return this._vertexStride;\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteBuffer(this._vbo);  \r\n        this._vbo = 0;      \r\n    }\r\n\r\n    //combine vertex attribute datas to a data array\r\n    _compile(){\r\n        let positionInfo = this._attribsInfo[VertexSemantic.POSITION];\r\n        if(positionInfo == null){\r\n            console.error('VertexBuffer: no attrib position');\r\n            return;\r\n        }\r\n        if(positionInfo.data == null || positionInfo.data.length===0){\r\n            console.error('VertexBuffer: position data is empty');\r\n            return;\r\n        }\r\n\r\n        this._vertexCount = positionInfo.data.length / positionInfo.size;  \r\n        this._vertexStride = this._vertexFormat.getVertexSize() * this.BYTES_PER_ELEMENT; \r\n        \r\n        this._bufferData = [];\r\n        for(let i=0; i<this._vertexCount; ++i){\r\n            for(let semantic of this._vertexFormat.attribs){\r\n                let info = this._attribsInfo[semantic];\r\n                if(info==null || info.data==null){\r\n                    console.error('VertexBuffer: bad semantic '+semantic);\r\n                    continue;\r\n                }\r\n                for(let k=0; k<info.size; ++k){\r\n                    let value = info.data[ i * info.size + k ];\r\n                    if(value===undefined){\r\n                        console.error('VertexBuffer: missing value for '+semantic);\r\n                    }\r\n                    this._bufferData.push(value);\r\n                }\r\n            }            \r\n        }\r\n\r\n        //compute offset for attrib info, and free info.data\r\n        let offset = 0;\r\n        for(let semantic of this._vertexFormat.attribs){\r\n            let info = this._attribsInfo[semantic];\r\n            info.offset = offset;\r\n            info.data = null;\r\n            offset += info.size * this.BYTES_PER_ELEMENT;\r\n        }\r\n    }\r\n\r\n    //upload data to webGL, add free buffer data\r\n    upload(){\r\n        this._compile();\r\n\r\n        let buffer = new Float32Array(this._bufferData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n                  \r\n        this._bufferData = null;\r\n    }\r\n\r\n    bindAttrib(shader){\r\n        for(let semantic of this._vertexFormat.attribs){\r\n            let info = this._attribsInfo[semantic];\r\n            \r\n            let location = shader.getAttributeLocation(semantic);\r\n            if(location>=0){\r\n                gl.vertexAttribPointer(location, \r\n                    info.size, \r\n                    gl.FLOAT, //type \r\n                    false, //normalized, \r\n                    this._vertexStride, \r\n                    info.offset);\r\n                gl.enableVertexAttribArray(location);\r\n            }                          \r\n        }\r\n    }\r\n\r\n    unbindAttrib(shader){\r\n        for(let semantic of this._vertexFormat.attribs){            \r\n            let location = shader.getAttributeLocation(semantic);\r\n            if(location>=0){\r\n                gl.disableVertexAttribArray(location);\r\n            }                          \r\n        }        \r\n    }\r\n}\r\n\r\nexport { VertexBuffer };","import { gl } from \"./gl\";\r\n\r\nclass IndexBuffer{\r\n    constructor(){\r\n        this._indexCount = 0;\r\n        this._mode = gl.TRIANGLES;\r\n        this._type = gl.UNSIGNED_SHORT;\r\n        this._vbo = gl.createBuffer();\r\n        this._bufferData = null;\r\n    }\r\n\r\n    setData(data){\r\n        this._bufferData = data;\r\n    }\r\n\r\n    get vbo(){\r\n        return this._vbo;\r\n    }\r\n\r\n    get indexCount(){\r\n        return this._indexCount;\r\n    }\r\n\r\n    get mode(){\r\n        return this._mode;\r\n    }\r\n\r\n    get type(){\r\n        return this._type;\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteBuffer(this._vbo);  \r\n        this._vbo = 0;\r\n    }\r\n\r\n    upload(){\r\n        if(this._bufferData==null){\r\n            console.error(\"buffer data is null.\");\r\n            return;\r\n        }\r\n        let useByte = this._bufferData.length<=256;\r\n        let buffer = useByte ? new Uint8Array(this._bufferData) : new Uint16Array(this._bufferData);\r\n        this._type = useByte ? gl.UNSIGNED_BYTE : gl.UNSIGNED_SHORT;\r\n        \r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._vbo);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        this._indexCount = buffer.length;\r\n        this._bufferData = null;\r\n    }\r\n}\r\n\r\nexport { IndexBuffer };","import { gl } from \"./gl\";\r\nimport { VertexBuffer } from \"./vertexBuffer\";\r\nimport { IndexBuffer } from \"./indexBuffer\";\r\n\r\nclass Mesh{    \r\n    constructor(vertexFormat){        \r\n        this._vertexBuffer = new VertexBuffer(vertexFormat);\r\n        this._indexBuffer = null;\r\n    }\r\n\r\n    setVertexData(semantic, data){\r\n        this._vertexBuffer.setData(semantic, data);        \r\n    }  \r\n    \r\n    setTriangles(data){\r\n        if(this._indexBuffer==null){\r\n            this._indexBuffer = new IndexBuffer();            \r\n        }\r\n        this._indexBuffer.setData(data);\r\n    }\r\n\r\n    destroy(){\r\n        this._vertexBuffer.destroy();    \r\n    }      \r\n\r\n    upload(){        \r\n        this._vertexBuffer.upload();   \r\n        if(this._indexBuffer){\r\n            this._indexBuffer.upload();\r\n        }                            \r\n    }\r\n\r\n    render(shader){\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer.vbo);\r\n        \r\n        this._vertexBuffer.bindAttrib(shader);\r\n                  \r\n        if(this._indexBuffer){\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer.vbo);\r\n            gl.drawElements(this._indexBuffer.mode, this._indexBuffer.indexCount, this._indexBuffer.type, 0);\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        } else {\r\n            gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer.vertexCount);\r\n        }\r\n        \r\n        this._vertexBuffer.unbindAttrib(shader);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { Mesh };\r\n","import { gl } from \"./gl\";\r\n\r\nclass Texture2D {\r\n    constructor(){\r\n        this._id = gl.createTexture();\r\n        if (!this._id) {\r\n            console.error('Failed to create the texture object');            \r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteTexture(this._id);\r\n        this._id = 0;\r\n    }\r\n\r\n    create(image){\r\n        // Bind the texture object to the target\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        \r\n        // Set the texture parameters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        \r\n        // Set the texture image data\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    }\r\n\r\n    get id(){\r\n        return this._id;\r\n    }\r\n\r\n    bind(unit=0){\r\n        gl.activeTexture(gl.TEXTURE0 + unit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n    }\r\n\r\n    unbind(){\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n}\r\n\r\nexport { Texture2D };","class ImageAsset{\r\n    constructor(name, data){\r\n        this.name = name;\r\n        this.data = data;        \r\n    }\r\n\r\n    get width(){\r\n        return this.data.width;\r\n    }\r\n\r\n    get height(){\r\n        return this.data.height;\r\n    }\r\n}\r\n\r\nclass ImageLoader {\r\n    loadAsset(name, onComplete){\r\n        let image = new Image();\r\n        image.onload = function(){\r\n            let asset = new ImageAsset(name, image);\r\n            if(onComplete){\r\n                onComplete(asset);\r\n            }            \r\n        };\r\n        image.src = name;\r\n    }\r\n}\r\n\r\nexport { ImageAsset, ImageLoader };","class TextAsset{\r\n    constructor(name, data){\r\n        this.name = name;\r\n        this.data = data;        \r\n    }    \r\n}\r\n\r\nclass TextLoader {\r\n    loadAsset(name, onComplete){\r\n        let request = new XMLHttpRequest();\r\n        request.onreadystatechange = function(){\r\n            if(request.readyState === XMLHttpRequest.DONE && request.status !== 404){\r\n                let asset = new TextAsset(name, request.responseText);\r\n                if(onComplete){\r\n                    onComplete(asset);\r\n                }   \r\n            }\r\n        }       \r\n        request.open('GET', name, true);\r\n        request.send();\r\n    }\r\n}\r\n\r\nexport { TextAsset, TextLoader };","import { ImageLoader } from \"./imageAsset\";\r\nimport { TextLoader } from \"./textAsset\";\r\n\r\nlet AssetType = {\r\n    Text : 'text',\r\n    Image : 'image'    \r\n}\r\n\r\nclass AssetManager {\r\n    \r\n    constructor(){\r\n        this._loaders = {};\r\n        this._assets = {};\r\n\r\n        this.addLoader(AssetType.Image, new ImageLoader());\r\n        this.addLoader(AssetType.Text, new TextLoader());\r\n    }\r\n\r\n    addLoader(assetType, loader){\r\n        this._loaders[assetType] = loader;\r\n    }\r\n\r\n    loadAsset(name, type, onComplete){\r\n        if(this._assets[name]){\r\n            if(onComplete){\r\n                onComplete(this._assets[name]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let loader = this._loaders[type];\r\n        if(loader){\r\n            loader.loadAsset(name, function(asset){\r\n                this._assets[name] = asset;\r\n                if(onComplete){\r\n                    onComplete(asset);\r\n                }\r\n            }.bind(this));\r\n        } else {\r\n            console.error(\"missing loader for asset type \"+type);\r\n        }\r\n    }\r\n\r\n    getAsset(name){\r\n        return this._assets[name];        \r\n    }\r\n\r\n    //assetList: [[name,type]]\r\n    loadAssetList(assetList, onAllComplete){\r\n        let remainCount = assetList.length;\r\n        for(let listItem of assetList){\r\n            let name = listItem[0];\r\n            let type = listItem[1];\r\n            this.loadAsset(name, type, function(asset){\r\n                if(asset){\r\n                    remainCount--;\r\n                    if(remainCount===0 && onAllComplete){\r\n                        onAllComplete();\r\n                    }\r\n                } else {\r\n                    console.error('fail to load asset '+name);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet assetManager = new AssetManager();\r\n\r\nexport { AssetType, assetManager };","import { Texture2D } from \"./texture\";\r\nimport { assetManager } from \"../assets/assetManager\";\r\n\r\nclass SharedTexture{\r\n    constructor(texture){\r\n        this.texture = texture;\r\n        this.refCount = 1;\r\n    }\r\n}\r\n\r\nclass TextureManager {\r\n    constructor(){\r\n        this._textures = {};\r\n    }\r\n\r\n    getTexture(texturePath){\r\n        if(this._textures[texturePath] == null){\r\n            let texture = new Texture2D();\r\n            texture.create(assetManager.getAsset(texturePath).data);\r\n            this._textures[texturePath] = new SharedTexture(texture);\r\n        } else {\r\n            this._textures[texturePath].refCount++;\r\n        }\r\n\r\n        return this._textures[texturePath].texture;\r\n    }\r\n\r\n    releaseTexture(texturePath){\r\n        if(this._textures[texturePath] == null){\r\n            console.error(\"releaseTexture: texture not found: \"+texturePath);            \r\n        } else {\r\n            this._textures[texturePath].refCount--;\r\n            if(this._textures[texturePath].refCount < 1){\r\n                this._textures[texturePath].texture.destroy();\r\n                this._textures[texturePath] = null;\r\n                delete this._textures[texturePath];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet textureManager = new TextureManager();\r\n\r\nexport { textureManager };","import { Mesh } from \"./mesh\";\r\nimport { VertexFormat, VertexSemantic } from \"./vertexFormat\";\r\nimport { Vector3 } from \"../math/vector3\"\r\n\r\nclass StringParser{\r\n    constructor(str){\r\n        if(str){\r\n            this.init(str);\r\n        }\r\n    }\r\n\r\n    init(str){\r\n        this.str = str.trim();        \r\n        this.index = 0;\r\n    }\r\n\r\n    getWorldLength(str, start){\r\n        let i=start;\r\n        for(let len=str.length; i<len; i++){\r\n            let c = str.charAt(i);\r\n            if (c == '\\t'|| c == ' ' || c == '(' || c == ')' || c == '\"'){ \r\n                break;\r\n            }\r\n        }\r\n        return i-start;\r\n    }\r\n\r\n    skipDelimiters(){\r\n        let i = this.index;\r\n        for(let len = this.str.length; i<len; i++){\r\n            let c = this.str.charAt(i);\r\n            //Skip TAB, Space, '(', ')'\r\n            if(c == '\\t' || c == ' ' || c == '(' || c==')' || c=='\"'){\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        this.index = i;\r\n    }\r\n\r\n    skipToNextWord(){\r\n        this.skipDelimiters();\r\n        let n = this.getWorldLength(this.str, this.index);\r\n        this.index += (n+1);\r\n    }\r\n\r\n    getWord(){\r\n        this.skipDelimiters();\r\n        let n = this.getWorldLength(this.str, this.index);\r\n        if(n == 0){\r\n            return null;\r\n        }\r\n        let word = this.str.substr(this.index, n);\r\n        this.index += (n+1);\r\n        return word;\r\n    }\r\n\r\n    getInt(){\r\n        return parseInt(this.getWord());\r\n    }\r\n\r\n    getFloat(){\r\n        return parseFloat(this.getWord());\r\n    }\r\n}\r\n\r\nclass Face{\r\n    constructor(){\r\n        this.vIndices = [];\r\n        this.nIndices = [];\r\n        this.tIndices = [];     \r\n    }\r\n}\r\n\r\nclass ObjFileLoader{\r\n    constructor(){\r\n        this.reset();\r\n    }\r\n\r\n    reset(){\r\n        this._vertices = [];\r\n        this._normals = [];\r\n        this._texcoords = [];\r\n        this._faces = [];       \r\n    }\r\n\r\n    load(fileString, scale){\r\n        let lines = fileString.split('\\n');\r\n        lines.push(null);\r\n        let index = 0;\r\n\r\n        let line;\r\n        let sp = new StringParser();\r\n        while((line = lines[index++]) != null){\r\n            sp.init(line);\r\n            let command = sp.getWord();\r\n            if(command==null) continue;\r\n\r\n            switch(command){\r\n                case '#':\r\n                    continue; //Skip comments\r\n                case 'mtllib': \r\n                    continue; //Skip material chunk\r\n                case 'o':\r\n                case 'g':\r\n                    continue; //Skip Object name\r\n                case 'v': //Read vertex\r\n                {\r\n                    let vertex = this.parseVertex(sp, scale);\r\n                    this._vertices.push(vertex);\r\n                    continue;\r\n                }\r\n                case 'vn'://Read normal\r\n                {\r\n                    let normal = this.parseNormal(sp);\r\n                    this._normals.push(normal);\r\n                    continue;\r\n                }\r\n                case 'vt'://Read texture coordinates\r\n                {\r\n                    let texcoord = this.pasreTexcoord(sp);\r\n                    this._texcoords.push(texcoord);\r\n                    continue;\r\n                }\r\n                case 'f'://Read face\r\n                {\r\n                    let face = this.parseFace(sp);\r\n                    this._faces.push(face);                   \r\n                    continue;\r\n                }\r\n                    \r\n            }\r\n        }       \r\n\r\n        let mesh = this._toMesh();\r\n        this.reset();\r\n        return mesh;\r\n    }\r\n\r\n    parseVertex(sp, scale){\r\n        let x = sp.getFloat() * scale;\r\n        let y = sp.getFloat() * scale;\r\n        let z = sp.getFloat() * scale;\r\n        return {'x':x,'y':y,'z':z};\r\n    }\r\n\r\n    parseNormal(sp){\r\n        let x = sp.getFloat();\r\n        let y = sp.getFloat();\r\n        let z = sp.getFloat();\r\n        return {'x':x,'y':y,'z':z};\r\n    }\r\n\r\n    pasreTexcoord(sp){\r\n        let texcoord = [];\r\n        for(;;){\r\n            let word = sp.getWord();\r\n            if(word==null) break;\r\n            texcoord.push(word);\r\n        }\r\n        return texcoord;\r\n    }\r\n\r\n    parseFace(sp){\r\n        let face = new Face();\r\n        for(;;){\r\n            let word = sp.getWord();\r\n            if(word==null) break;\r\n            let subWords = word.split('/');\r\n            if(subWords.length >= 1){\r\n                let vi = parseInt(subWords[0]) - 1;\r\n                face.vIndices.push(vi);\r\n            }\r\n            if(subWords.length >= 3){\r\n                let ni = parseInt(subWords[2]) - 1;\r\n                face.nIndices.push(ni);\r\n                let ti = parseInt(subWords[1]);\r\n                if(!isNaN(ti)){                    \r\n                    face.tIndices.push(ti-1);\r\n                }\r\n            }\r\n        }        \r\n\r\n        // Devide to triangels if face contains over 3 points.\r\n        // 即使用三角扇表示多边形。n个顶点需要三角形n-2。\r\n        if(face.vIndices.length > 3){\r\n            let n = face.vIndices.length - 2;\r\n            let newVIndices = new Array(n * 3);\r\n            let newNIndices = new Array(n * 3);\r\n            for(let i=0; i<n; i++){\r\n                newVIndices[i*3] = face.vIndices[0];\r\n                newVIndices[i*3+1] = face.vIndices[i+1];\r\n                newVIndices[i*3+2] = face.vIndices[i+2];\r\n                if(face.nIndices.length>0){\r\n                    newNIndices[i*3] = face.nIndices[0];\r\n                    newNIndices[i*3+1] = face.nIndices[i+1];\r\n                    newNIndices[i*3+2] = face.nIndices[i+2];\r\n                }\r\n            }\r\n            face.vIndices = newVIndices;\r\n            if(face.nIndices.length>0){\r\n                face.nIndices = newNIndices;    \r\n            }            \r\n        }       \r\n\r\n        return face;\r\n    }\r\n\r\n    _calcFaceNormal(p0, p1, p2){\r\n        let v_10 = new Vector3(p0.x-p1.x, p0.y-p1.y, p0.z-p1.z);\r\n        let v_12 = new Vector3(p2.x-p1.x, p2.y-p1.y, p2.z-p1.z);\r\n        let normal = new Vector3();\r\n        Vector3.cross(v_12, v_10, normal);\r\n        normal.normalize();\r\n        return normal;\r\n    }\r\n\r\n    _calcFaceArea(p0, p1, p2){\r\n        let a = Vector3.distance(p0, p1);\r\n        let b = Vector3.distance(p1, p2);\r\n        let c = Vector3.distance(p0, p2);\r\n        let p = (a+b+c)/2;\r\n        return Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n    }\r\n\r\n    _calcAngle(v0, v1){\r\n        v0.normalize();\r\n        v1.normalize();\r\n        return Math.acos(Vector3.dot(v0, v1));\r\n    }\r\n\r\n    _toMesh(){\r\n        let format = new VertexFormat();\r\n        format.addAttrib(VertexSemantic.POSITION, 3);        \r\n        format.addAttrib(VertexSemantic.NORMAL, 3);\r\n        \r\n        let texsize = 0;\r\n        if(this._texcoords.length > 0){\r\n            texsize = this._texcoords[0].length;\r\n            format.addAttrib(VertexSemantic.UV0, texsize);\r\n        }\r\n\r\n        let mesh = new Mesh(format);        \r\n\r\n        let triangels = [];\r\n        let positions = [];\r\n        let normals = [];\r\n        let uvs = [];\r\n\r\n        for(let i=0; i<this._vertices.length; i++){\r\n            let v = this._vertices[i];\r\n            positions.push(v.x, v.y, v.z);\r\n        }\r\n       \r\n        if(this._normals.length > 0){\r\n            if(this._normals.length !== this._vertices.length){\r\n                console.warn(\"obj file normals count not match vertices count\");\r\n            }\r\n            for(let i=0; i<this._normals.length; i++){\r\n                let n = this._normals[i];\r\n                normals.push(n.x, n.y, n.z);\r\n            }\r\n        }\r\n\r\n        if(this._texcoords.length > 0){\r\n            if(this._texcoords.length !== this._vertices.length){\r\n                console.warn(\"obj file texcoords count not match vertices count\");\r\n            }           \r\n            for(let i=0; i<this._texcoords.length; i++){\r\n                let texcoord = this._texcoords[i];\r\n                for(let j=0; j<texsize; j++){\r\n                    uvs.push(texcoord[j]);\r\n                }\r\n            }            \r\n        }\r\n\r\n        for(let i=0; i<this._faces.length; i++){\r\n            let face = this._faces[i];\r\n            for(let j=0; j<face.vIndices.length; j++){    \r\n                let vIdx = face.vIndices[j];                            \r\n                triangels.push(vIdx);                \r\n\r\n                if(face.nIndices.length > 0){\r\n                    let nIdx = face.nIndices[j];\r\n                    if(nIdx !== vIdx){\r\n                        console.warn('obj file nIdx not match vIdx');\r\n                    }                  \r\n                }                \r\n            }            \r\n        }\r\n\r\n        if(normals.length===0){            \r\n            let triangleCount = triangels.length/3;\r\n            let vertexNormals = [];\r\n            let t = 0;\r\n            for(let i=0; i<triangleCount; ++i){                \r\n                let idx0 = triangels[t];\r\n                let idx1 = triangels[t+1];\r\n                let idx2 = triangels[t+2];\r\n                t+=3;\r\n\r\n                let p0x = positions[idx0*3];\r\n                let p0y = positions[idx0*3+1];\r\n                let p0z = positions[idx0*3+2];\r\n\r\n                let p1x = positions[idx1*3];\r\n                let p1y = positions[idx1*3+1];\r\n                let p1z = positions[idx1*3+2];\r\n\r\n                let p2x = positions[idx2*3];\r\n                let p2y = positions[idx2*3+1];\r\n                let p2z = positions[idx2*3+2];\r\n\r\n                let p0 = new Vector3(p0x, p0y, p0z);\r\n                let p1 = new Vector3(p1x, p1y, p1z);\r\n                let p2 = new Vector3(p2x, p2y, p2z);\r\n\r\n                let faceN = this._calcFaceNormal(p0, p1, p2);          \r\n                let faceArea = this._calcFaceArea(p0, p1, p2);      \r\n\r\n                if(vertexNormals[idx0]==null){\r\n                    vertexNormals[idx0] = new Vector3();\r\n                }\r\n                let angle = this._calcAngle(new Vector3(p1x-p0x, p1y-p0y, p1z-p0z), new Vector3(p2x-p0x, p2y-p0y, p2z-p0z));                \r\n                vertexNormals[idx0].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n\r\n                if(vertexNormals[idx1]==null){\r\n                    vertexNormals[idx1] = new Vector3();\r\n                }\r\n                angle = this._calcAngle(new Vector3(p2x-p1x, p2y-p1y, p2z-p1z), new Vector3(p0x-p1x, p0y-p1y, p0z-p1z));                \r\n                vertexNormals[idx1].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n\r\n                if(vertexNormals[idx2]==null){\r\n                    vertexNormals[idx2] = new Vector3();\r\n                }\r\n                angle = this._calcAngle(new Vector3(p0x-p2x, p0y-p2y, p0z-p2z), new Vector3(p1x-p2x, p1y-p2y, p1z-p2z));                \r\n                vertexNormals[idx2].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n            }\r\n\r\n            for(let i=0; i<vertexNormals.length; ++i){\r\n                let n = vertexNormals[i];                                \r\n                n.normalize();\r\n                normals.push(n.x, n.y, n.z);\r\n            }\r\n        }\r\n\r\n        mesh.setVertexData(VertexSemantic.POSITION, positions);\r\n        mesh.setVertexData(VertexSemantic.NORMAL, normals);\r\n        \r\n        if(uvs.length>0){\r\n            mesh.setVertexData(VertexSemantic.UV0, uvs);\r\n        }\r\n\r\n        mesh.setTriangles(triangels);\r\n        mesh.upload();\r\n\r\n        console.log('vertex count '+this._vertices.length);\r\n        console.log('triangle count '+triangels.length/3);\r\n\r\n        return mesh;\r\n    }\r\n\r\n}\r\n\r\nlet objFileLoader = new ObjFileLoader();\r\n\r\nexport {objFileLoader};","import { Vector3 } from \"../math/vector3\";\r\nimport { Quaternion } from \"../math/quaternion\";\r\nimport { Matrix4 } from \"../math/matrix\";\r\n\r\nclass SceneNode {\r\n    constructor(){\r\n        this.position = new Vector3();\r\n        this.rotation = new Quaternion();\r\n        this.scale = new Vector3();\r\n        this.localMatrix = new Matrix4();\r\n        this.worldMatrix = new Matrix4();\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this._rotationMatrix = new Matrix4();\r\n    }\r\n\r\n    removeFromParent(){\r\n        if(this.parent){\r\n            let idx = this.parent.children.indexOf(this);\r\n            if(idx>=0){\r\n                this.parent.children.splice(idx, 1);\r\n            }\r\n            this.parent = null;\r\n        }\r\n    }\r\n\r\n    setParent(parent){\r\n        this.removeFromParent();\r\n        if(parent){\r\n            parent.children.push(this);\r\n        }\r\n        this.parent = parent;\r\n    }\r\n\r\n    addChild(node){\r\n        node.setParent(this);\r\n    }\r\n\r\n    updateLocalMatrix(){\r\n        //TODO:local matrix dirty flag\r\n\r\n        this.localMatrix.setTranslate(this.position.x, this.position.y, this.position.z);   \r\n        //TODO:封装rotation操作并cache _rotatoinMatrix\r\n        Quaternion.toMatrix4(this.rotation, this._rotationMatrix);\r\n        this.localMatrix.multiply(this._rotationMatrix);        \r\n        this.localMatrix.scale(this.scale.x, this.scale.y, this.scale.z);      \r\n    }\r\n\r\n    updateWorldMatrix(parentWorldMatrix){\r\n        if(parentWorldMatrix){\r\n            Matrix4.multiply(parentWorldMatrix, this.localMatrix, this.worldMatrix);\r\n        } else {\r\n            this.worldMatrix.set(this.localMatrix);\r\n        }\r\n\r\n        let worldMatrix = this.worldMatrix;\r\n        this.children.forEach(function(child){\r\n            child.updateWorldMatrix(worldMatrix);\r\n        });\r\n    }\r\n}\r\n\r\nexport { SceneNode };","import { Vector3 } from \"../math/vector3\";\r\nimport { Quaternion } from \"../math/quaternion\";\r\nimport { Matrix4 } from \"../math/matrix\";\r\n\r\nclass SceneNode {\r\n    constructor(){\r\n        this.position = new Vector3();\r\n        this.rotation = new Quaternion();\r\n        this.scale = new Vector3();\r\n        this.localMatrix = new Matrix4();\r\n        this.worldMatrix = new Matrix4();\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this._rotationMatrix = new Matrix4();\r\n    }\r\n\r\n    removeFromParent(){\r\n        if(this.parent){\r\n            let idx = this.parent.children.indexOf(this);\r\n            if(idx>=0){\r\n                this.parent.children.splice(idx, 1);\r\n            }\r\n            this.parent = null;\r\n        }\r\n    }\r\n\r\n    setParent(parent){\r\n        this.removeFromParent();\r\n        if(parent){\r\n            parent.children.push(this);\r\n        }\r\n        this.parent = parent;\r\n    }\r\n\r\n    addChild(node){\r\n        node.setParent(this);\r\n    }\r\n\r\n    updateLocalMatrix(){\r\n        //TODO:local matrix dirty flag\r\n\r\n        this.localMatrix.setTranslate(this.position.x, this.position.y, this.position.z);   \r\n        //TODO:封装rotation操作并cache _rotatoinMatrix\r\n        Quaternion.toMatrix4(this.rotation, this._rotationMatrix);\r\n        this.localMatrix.multiply(this._rotationMatrix);        \r\n        this.localMatrix.scale(this.scale.x, this.scale.y, this.scale.z);      \r\n    }\r\n\r\n    updateWorldMatrix(parentWorldMatrix){\r\n        if(parentWorldMatrix){\r\n            Matrix4.multiply(parentWorldMatrix, this.localMatrix, this.worldMatrix);\r\n        } else {\r\n            this.worldMatrix.set(this.localMatrix);\r\n        }\r\n\r\n        let worldMatrix = this.worldMatrix;\r\n        this.children.forEach(function(child){\r\n            child.updateWorldMatrix(worldMatrix);\r\n        });\r\n    }\r\n}\r\n\r\nexport { SceneNode };","import { SceneNode } from \"./SceneNode\";\r\n\r\nclass Scene{\r\n    constructor(){\r\n        this.root = new SceneNode();\r\n\r\n    }\r\n\r\n    getRoot(){\r\n        return this.root;\r\n    }\r\n\r\n    update(){\r\n        this.root.updateWorldMatrix();\r\n    }\r\n\r\n    render(){\r\n        \r\n    }\r\n}\r\n\r\nexport { Scene };"],"names":["gl","canvas","SceneNode"],"mappings":"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AC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GAC3E,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC3E,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GAC3E,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;GAE3E,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GAC3E,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,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,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACzE,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GACzE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACzE,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GACzE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;GAEzE,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GACvE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACvE,QAAQ,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;GACvE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACvE,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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"}